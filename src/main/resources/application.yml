# ?? ????? ?? ?? ??
server:
  port: 1234

# ?? ????? ?? ??
spring:
  application:
    name: user-service

  datasource:
    url: jdbc:mysql://localhost:3306/villion_user?serverTimezone=Asia/Seoul
    username: root
    password: 1234
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      group-id: Terrain-1
      auto-offset-reset: latest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
# ?? ????? eureka ??
eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true # eureka ?? ??
    fetch-registry: true # eureka ????? ?????? ??? ????? ??? ???
    service-url:     # ??? ??? ???? ??? ??.. ??? ??? ?? ?? ??..
      defaultZone: http://127.0.0.1:8761/eureka # ? ?? ??????? ??? ?????.

#token:
#  expiration_time: 86400000 # 하루 60초*(60분*24시간)*1000
#  secret: user_token # 어떤 키를 가지고 생성할 것인지(임의값 넣기)

#logging:
#  level:
#    org:
#      springframework: DEBUG
